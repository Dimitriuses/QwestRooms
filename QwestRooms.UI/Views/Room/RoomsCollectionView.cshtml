@using QwestRooms.UI.Models

@model IndexViewModel
@*@model List<QwestRoom.BLL.DTOModels.RoomDTO>*@
<style>
    .flip-card {
        perspective: 1000px;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        /*text-align: center;*/
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
    }

    .flip-card-front {
        background-color: #bbb;
        color: black;
    }

    .flip-card-back {
        background-color: dodgerblue;
        color: white;
        transform: rotateY(180deg);
    }
</style>

@foreach (var item in Model.Rooms)
{
    <div class="card flip-card" style="width: 18rem; height: 36rem; float: left; margin: 5px;">
        <div class="flip-card-inner">
            <div class="flip-card-front" style="background-color:white;">
                <img style="width: 18rem; height: 18rem;" class="card-img-top border border-primary" src="@Html.DisplayFor(modelItem => item.LogoPath)" alt="Card image cap">
                <div class="card-body">
                    <span class="badge badge-pill badge-success">@Html.DisplayFor(modelItem => item.Rating)</span>
                    <span class="badge badge-pill badge-warning">@Html.DisplayFor(modelItem => item.FearLevel)</span>
                    <span class="badge badge-pill badge-danger">@Html.DisplayFor(modelItem => item.Diffictly)</span>
                    <h5 style="height: 3.6rem; overflow: hidden; text-overflow: ellipsis;" class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                    <p style="height: 8rem; overflow: hidden; text-overflow: ellipsis;" class="card-text"> @Html.DisplayFor(modelItem => item.Description)</p>
                </div>
            </div>
            <div class="flip-card-back" style="background-color:black; color:white">
                <img style="width: 18rem; height: 18rem;" class="card-img-top border border-primary" src="@Html.DisplayFor(modelItem => item.LogoPath)" alt="Card image cap">
                <div class="card-body">
                    <span class="badge badge-pill badge-success">@Html.DisplayFor(modelItem => item.Rating)</span>
                    <span class="badge badge-pill badge-warning">@Html.DisplayFor(modelItem => item.FearLevel)</span>
                    <span class="badge badge-pill badge-danger">@Html.DisplayFor(modelItem => item.Diffictly)</span>
                    <h5 style="height: 3.6rem; overflow: hidden; text-overflow: ellipsis;" class="card-title">Phone: @Html.DisplayFor(modelItem => item.Phone)</h5>
                    <h5 style="height: 7.5rem; overflow: hidden; text-overflow: ellipsis;" class="card-text">Email: @Html.DisplayFor(modelItem => item.Email)</h5>
                    <a href="#" class="btn btn-primary">Go somewhere</a>
                </div>
            </div>
        </div>
    </div>
}
    <nav style="clear:left" aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @if (Model.PageViewModel.HasPreviousPage)
            {
                <li class="page-item">
                    <a href="@Ajax.ActionLink("", "GetRoomsByPage", new { page = Model.PageViewModel.PageNumber - 1 }, new AjaxOptions { UpdateTargetId = "rooms" })"
                       class="page-link">
                        <i class="glyphicon glyphicon-chevron-left"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a asp-action="Index" class="page-link">
                        <i class="glyphicon glyphicon-chevron-left"></i>
                    </a>
                </li>
            }
            @for (int i = 1; i < Model.PageViewModel.TotalPages; i++)
            {
                if (i == Model.PageViewModel.PageNumber)
                {
                    <li class="page-item disabled"><a class="page-link">@i</a></li>
                }
                else
                {
                    <li class="page-item">
                        @Ajax.ActionLink(i.ToString(), "GetRoomsByPage", new { page = i }, new AjaxOptions { UpdateTargetId = "rooms" })
                        @*<a href="@Url.Action("Index",new { page = i})" class="page-link">@i</a>*@
                    </li>

                }
            }
            @if (Model.PageViewModel.HasNextPage)
            {
                <li class="page-item">
                    <a href="@Ajax.ActionLink(" ", "GetRoomsByPage", new { page = Model.PageViewModel.PageNumber + 1 }, new AjaxOptions { UpdateTargetId = "rooms" })"
                       class="page-link">
                        <i class="glyphicon glyphicon-chevron-right"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link">
                        <i class="glyphicon glyphicon-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
    @*<script>
            $(".card").flip({
                axis: 'y',
                trigger: 'hover'
            })
        </script>*@
